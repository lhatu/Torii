package com.example.torii.notification

import android.Manifest
import android.app.NotificationChannel
import android.app.NotificationManager
import android.content.Context
import android.content.pm.PackageManager
import android.os.Build
import androidx.core.app.NotificationCompat
import androidx.core.app.NotificationManagerCompat
import androidx.core.content.ContextCompat
import com.example.torii.R

fun showCommentNotification(context: Context, ownerName: String, commentText: String) {
    // üîê Ki·ªÉm tra quy·ªÅn tr∆∞·ªõc
    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.TIRAMISU) {
        if (ContextCompat.checkSelfPermission(context, Manifest.permission.POST_NOTIFICATIONS)
            != PackageManager.PERMISSION_GRANTED
        ) {
            return
        }
    }

    val channelId = "comment_channel"
    val notificationId = System.currentTimeMillis().toInt()

    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
        val name = "Comment Notifications"
        val descriptionText = "Th√¥ng b√°o khi c√≥ ng∆∞·ªùi b√¨nh lu·∫≠n"
        val importance = NotificationManager.IMPORTANCE_DEFAULT
        val channel = NotificationChannel(channelId, name, importance).apply {
            description = descriptionText
        }

        val notificationManager: NotificationManager =
            context.getSystemService(Context.NOTIFICATION_SERVICE) as NotificationManager
        notificationManager.createNotificationChannel(channel)
    }

    // üîî T·∫°o v√† g·ª≠i th√¥ng b√°o
    val builder = NotificationCompat.Builder(context, channelId)
        .setSmallIcon(R.drawable.notifications_active)
        .setContentTitle("B√¨nh lu·∫≠n m·ªõi tr√™n Torii")
        .setContentText("$ownerName ƒë√£ b√¨nh lu·∫≠n: $commentText")
        .setPriority(NotificationCompat.PRIORITY_DEFAULT)

    with(NotificationManagerCompat.from(context)) {
        notify(notificationId, builder.build())
    }
}

